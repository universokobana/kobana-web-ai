<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kobana - Complete Website for LLMs</title>
    <link rel="stylesheet" href="/style.css">
    <style>
      body {
          max-width: 1200px;
          margin: 0 auto;
          padding: 20px;
      }
      pre {
          background-color: #f4f4f4;
          padding: 15px;
          border-radius: 5px;
          overflow-x: auto;
      }
      code {
          background-color: #f4f4f4;
          padding: 2px 4px;
          border-radius: 3px;
      }
      table {
          border-collapse: collapse;
          width: 100%;
          margin: 20px 0;
      }
      th, td {
          border: 1px solid #ddd;
          padding: 8px;
          text-align: left;
      }
      th {
          background-color: #f4f4f4;
      }
      blockquote {
          border-left: 4px solid #333;
          padding-left: 20px;
          margin: 20px 0;
          font-style: italic;
      }
    </style>
  </head>
  <body>
    <header>
      <p><strong>‚ö†Ô∏è Note:</strong> This content is specifically designed for LLMs and not intended for human reading.</p>
      <p>üëâ For human-readable content, please visit <a href="https://www.kobana.com.br">Kobana Website</a></p>
      <p>ü§ñ For LLMs/programmatic access, you can fetch this content directly:</p>
      <code style="background: #eee; padding: 10px; margin: 10px;">curl ai.kobana.com.br</code>
      <p>üá∫üá∏ Para ver esse conte√∫do em Portugu√™s, por favor visite <a href="/pt-BR">ai.kobana.com.br/pt-BR</a>
      <p>üåê You see this HTML because you are in a browser. If you access it via curl/code/program, you get a text/markdown response as below. You can also access the markdown directly at <a href="/en-US.md">ai.kobana.com.br/en-US.md</a></p>
      <p><a href="https://github.com/universokobana/kobana-web-ai/">Check out our Github for more info.</a></p>
    </header>
    <main>
      <button id="copyButton" style="position: sticky; top: 20px; float: right; margin: 10px; padding: 10px 20px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; z-index: 100;">
        Copy Prompt
      </button>
      <pre style="display: none;"><%= @markdown_content %></pre>
      <div id="content">
        <%= @html_content %>
      </div>
    </main>
    <footer>
      <p>For human-readable content, please visit <a href="https://www.kobana.com.br">Kobana Website</a></p>
      <p>For direct content access: <code>curl ai.kobana.com.br</code></p>
    </footer>
    <script>
      document.getElementById('copyButton').addEventListener('click', async function() {
          const preText = document.querySelector('pre').textContent;

          try {
              // Try the modern clipboard API first
              if (navigator.clipboard && window.isSecureContext) {
                  await navigator.clipboard.writeText(preText);
                  this.textContent = 'Copied!';
              } else {
                  // Fallback for older browsers or non-HTTPS
                  const textArea = document.createElement('textarea');
                  textArea.value = preText;
                  textArea.style.position = 'fixed';
                  textArea.style.left = '-999999px';
                  textArea.style.top = '-999999px';
                  document.body.appendChild(textArea);
                  textArea.focus();
                  textArea.select();

                  try {
                      document.execCommand('copy');
                      this.textContent = 'Copied!';
                  } catch (err) {
                      this.textContent = 'Failed to copy';
                      console.error('Failed to copy text: ', err);
                  }

                  textArea.remove();
              }

              // Reset button text after 2 seconds
              setTimeout(() => {
                  this.textContent = 'Copy Prompt';
              }, 2000);

          } catch (err) {
              this.textContent = 'Failed to copy';
              console.error('Failed to copy text: ', err);

              // Reset button text after 2 seconds
              setTimeout(() => {
                  this.textContent = 'Copy Prompt';
              }, 2000);
          }
      });

      // Add hover effect
      const copyButton = document.getElementById('copyButton');
      copyButton.addEventListener('mouseover', function() {
          this.style.backgroundColor = '#45a049';
      });
      copyButton.addEventListener('mouseout', function() {
          this.style.backgroundColor = '#4CAF50';
      });

      // Add active effect
      copyButton.addEventListener('mousedown', function() {
          this.style.backgroundColor = '#3d8b40';
      });
      copyButton.addEventListener('mouseup', function() {
          this.style.backgroundColor = '#45a049';
      });
    </script>
  </body>
</html>